@model IEnumerable<PollyBookApp_ST2.Models.ReadingItems.ReadingItem>
@{
    ViewData["Title"] = "Reading Items List";
}

@* 
    Notification Area 
    Here we show the message that was triggered based on the user's actions. Either on Create or on Edit.
*@
@if (!string.IsNullOrEmpty(ViewBag.NotificationMessage))
{
    <div class="notification">
        @ViewBag.NotificationMessage
    </div>
}

<h3>
    <a asp-controller="ReadingItems" asp-action="Create" class="btn btn-primary">Create new reading item</a>
</h3>


@*
    And here is the form for the strategy type and the query/price ranges, needed for the search
*@
<div class="container mt-5">
    <form asp-action="Search" method="get">
        <div class="form-group">
            <label for="query" class="label">Search Query:</label>
            <input class="form-control" type="text" id="query" name="query" />
        </div>
        <div class="form-group">
            <label for="strategyType" class="label">Search By:</label>
            <select id="strategyType" name="strategyType" class="form-control">
                <option value="Title">Title</option>
                <option value="PriceRange">Price Range</option>
            </select>
        </div>
        <div id="priceRangeFields" style="display:none;" class="form-group">
            <label for="minPrice" class="label">Min Price:</label>
            <input class="form-control" type="number" id="minPrice" name="minPrice" step="0.01" />

            <label for="maxPrice" class="label">Max Price:</label>
            <input class="form-control" type="number" id="maxPrice" name="maxPrice" step="0.01" />
        </div>
        <button type="submit" class="btn btn-primary">Search</button>
    </form>
</div>


<div class="container mt-4">
    <div class="row">
        @if (Model != null && Model.Any())
        {
            foreach (var item in Model)
            {
                <div class="col-md-4 mb-4">
                    <div class="card h-100">
                        @if (!string.IsNullOrEmpty(item.PicturePath))
                        {
                            <img src="@item.PicturePath" alt="Cover for @item.Title" class="card-img-top" style="height: 200px; object-fit: cover;" />
                        }
                        <div class="card-body">
                            <h5 class="card-title">@item.Title</h5>
                            <p class="card-text"><strong>Price:</strong> @item.Price.ToString("C")</p>
                            <p class="card-text"><strong>Description:</strong> @item.Description</p>
                        </div>
                        <div class="card-footer text-center">
                            <a asp-controller="ReadingItems" asp-action="Details" asp-route-id="@item.Id" class="btn btn-info">Details</a>
                            <a asp-controller="ReadingItems" asp-action="Edit" asp-route-id="@item.Id" class="btn btn-warning">Edit</a>
                            <a asp-controller="ReadingItems" asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger" onclick="return confirm('Are you sure you want to delete this reading item?');">Delete</a>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="col-12">
                <div class="alert alert-warning text-center">
                    No reading items found.
                </div>
            </div>
        }
    </div>
</div>


<script>
    document.getElementById("strategyType").addEventListener("change", function () {
        var priceRangeFields = document.getElementById("priceRangeFields");
        priceRangeFields.style.display = (this.value === "PriceRange") ? "block" : "none";
    });
</script>